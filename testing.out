Begin testing

Test 1: Testing sudoku with invalid parameters (./sudoku)
Wrong number of arguments.
Usage: sudoku [create|solve]

Test 2: Testing sudoku with invalid parameters (./sudoku iLikePie)
Argument was not create or solve.
Usage: sudoku [create|solve]

Test 3: Testing sudoku with invalid parameters (./sudoku create solve)
Wrong number of arguments.
Usage: sudoku [create|solve]

Test 4: Ask sudoku to create a puzzle using creator module (./sudoku create)
0 0 0 0 5 0 0 8 0
9 5 0 0 0 4 0 0 0
4 1 0 0 0 0 0 2 5
8 3 0 0 0 9 2 5 0
5 7 0 0 0 8 0 0 9
2 0 9 0 0 0 1 7 0
1 0 0 6 0 0 0 0 4
7 4 0 1 0 5 0 6 0
0 0 0 0 3 0 5 0 0

Test 5: Testing null stdin input to solver module (./sudoku solve)
Invalid input: not enough numbers.

Test 6: Testing sudoku puzzle with a single unique solution (./sudoku solve) (output written to tests/test1/test1-output)
Differences found between output and expected output (if none, below is blank)

Test 7: Testing sudoku puzzle with multiple solutions (./sudoku solve) (output written to tests/test2/test2-output)
Differences found between output and expected output (if none, below is blank)

Test 8: Testing sudoku puzzle with no solutions (./sudoku solve) (output written to tests/test3/test3-output)
Differences found between output and expected output (if none, below is blank)

Test 9: Testing sudoku puzzle with invalid input (./sudoku solve) (output written to tests/test4/test4-output)
Differences found between output and expected output (if none, below is blank)

Test 10: Testing sudoku puzzle with bad input format (./sudoku solve) (output written to tests/test5/test5-output)
Differences found between output and expected output (if none, below is blank)


The following tests call sudoku create and pipe the output to sudoku solve. All should return unique solutions.

Fuzztest 1: 
Solver parsed sudoku puzzle:
0 0 0 0 5 0 0 8 0
9 5 0 0 0 4 0 0 0
4 1 0 0 0 0 0 2 5
8 3 0 0 0 9 2 5 0
5 7 0 0 0 8 0 0 9
2 0 9 0 0 0 1 7 0
1 0 0 6 0 0 0 0 4
7 4 0 1 0 5 0 6 0
0 0 0 0 3 0 5 0 0

Solved sudoku:
3 2 6 9 5 1 4 8 7
9 5 7 8 2 4 6 1 3
4 1 8 3 7 6 9 2 5
8 3 4 7 1 9 2 5 6
5 7 1 2 6 8 3 4 9
2 6 9 5 4 3 1 7 8
1 9 5 6 8 2 7 3 4
7 4 3 1 9 5 8 6 2
6 8 2 4 3 7 5 9 1
Unique solution! Normally, nothing is printed when DEBUG flag turned off.

Fuzztest 2: 
Solver parsed sudoku puzzle:
0 0 0 0 5 0 0 8 0
9 5 0 0 0 4 0 0 0
4 1 0 0 0 0 0 2 5
8 3 0 0 0 9 2 5 0
5 7 0 0 0 8 0 0 9
2 0 9 0 0 0 1 7 0
1 0 0 6 0 0 0 0 4
7 4 0 1 0 5 0 6 0
0 0 0 0 3 0 5 0 0

Solved sudoku:
3 2 6 9 5 1 4 8 7
9 5 7 8 2 4 6 1 3
4 1 8 3 7 6 9 2 5
8 3 4 7 1 9 2 5 6
5 7 1 2 6 8 3 4 9
2 6 9 5 4 3 1 7 8
1 9 5 6 8 2 7 3 4
7 4 3 1 9 5 8 6 2
6 8 2 4 3 7 5 9 1
Unique solution! Normally, nothing is printed when DEBUG flag turned off.

Fuzztest 3: 
Solver parsed sudoku puzzle:
0 0 0 0 5 0 0 8 0
9 5 0 0 0 4 0 0 0
4 1 0 0 0 0 0 2 5
8 3 0 0 0 9 2 5 0
5 7 0 0 0 8 0 0 9
2 0 9 0 0 0 1 7 0
1 0 0 6 0 0 0 0 4
7 4 0 1 0 5 0 6 0
0 0 0 0 3 0 5 0 0

Solved sudoku:
3 2 6 9 5 1 4 8 7
9 5 7 8 2 4 6 1 3
4 1 8 3 7 6 9 2 5
8 3 4 7 1 9 2 5 6
5 7 1 2 6 8 3 4 9
2 6 9 5 4 3 1 7 8
1 9 5 6 8 2 7 3 4
7 4 3 1 9 5 8 6 2
6 8 2 4 3 7 5 9 1
Unique solution! Normally, nothing is printed when DEBUG flag turned off.
